// ===== Established 2024 ========================
//
//  Functionality: Sets up Leetcode env.
//
// ===============================================



#ifndef Solution_hpp
#define Solution_hpp

// #include statements generated by ChatGPT Version 3.5
#include <iostream>      // For standard input/output operations
#include <vector>        // For using vectors
#include <string>        // For using strings
#include <algorithm>     // For algorithms like sort, find, etc.
#include <cmath>         // For mathematical functions like sqrt, pow, etc.
#include <queue>         // For using queues
#include <stack>         // For using stacks
#include <unordered_map> // For using unordered_map (hash map)
#include <unordered_set> // For using unordered_set (hash set)
#include <cstdio>        // For C-style input/output operations
#include <cstdlib>       // For standard library functions like atoi, malloc, etc.
#include <cstring>       // For C-style string manipulation functions
#include <iomanip>       // For formatted input/output operations
#include <sstream>       // For string streams
#include <bitset>        // For using bitsets
#include <map>           // For using maps
#include <set>           // For using sets
#include <deque>         // For using double-ended queues
#include <list>          // For using linked lists
#include <utility>       // For using pair and other utilities
#include <functional>    // For using function objects
#include <limits>        // For accessing limits of integral and floating-point types
#include <numeric>       // For numeric operations like accumulate, inner_product, etc.
#include <iterator>      // For iterators and iterator adapters
#include <chrono>        // For time-related utilities
#include <random>        // For random number generation
#include <regex>         // For regular expressions
#include <fstream>       // For file input/output operations
#include <ctime>         // For working with date and time
#include <cctype>        // For character classification functions like isalpha, isdigit, etc.
#include <cassert>       // For including assertions in your code
#include <cstddef>       // For defining various macros like NULL
#include <cstdarg>       // For handling variable arguments in functions
#include <stdexcept>     // For standard exception types
#include <typeinfo>      // For obtaining type information at runtime
#include <initializer_list> // For using initializer lists
#include <tuple>         // For using tuples
#include <memory>        // For smart pointers and memory management
#include <thread>        // For multi-threading support
#include <mutex>         // For synchronization primitives like mutexes
#include <condition_variable> // For condition variables
#include <atomic>        // For atomic operations
#include <future>        // For asynchronous programming with futures and promises
#include <codecvt>       // For converting between different character encodings
#include <bitset>        // For working with bitsets
#include <complex>       // For complex numbers and operations
#include <exception>     // For exception handling mechanisms
#include <filesystem>    // For filesystem operations (C++17 and later)
#include <functional>    // For functional programming utilities
#include <iomanip>       // For manipulators and formatting options
#include <locale>        // For working with different locales and facets
#include <new>           // For dynamic memory allocation operations
#include <system_error>  // For system-related error codes and categories
#include <type_traits>   // For type traits and type utilities
#include <variant>       // For working with variant types (C++17 and later)
#include <array>         // For using fixed-size arrays
#include <ios>           // For input/output stream operations
#include <istream>       // For input stream operations
#include <optional>      // For optional values (C++17 and later)
#include <ostream>       // For output stream operations
#include <ratio>         // For representing compile-time rational constants
#include <typeindex>     // For working with type information
#include <valarray>      // For numeric arrays
using namespace std;



#endif